
let students = {
   js: [{
      name: 'John',
      progress: 100
   }, {
      name: 'Ivan',
      progress: 60
   }],
 
   html: {
      basic: [{
         name: 'Peter',
         progress: 20
      }, {
         name: 'Ann',
         progress: 18
      }],
 
      pro: [{
         name: 'Sam',
         progress: 10
      }],
 
      semi: {
         students: [{
            name: 'Test',
            progress: 100
         }]
      }
   }
};

function getTotalProgressByItteration(data){
   let total = 0;
   let students =0;



   for (let course of Object.values(data)) {
     if( Array.isArray(course)) {
       students += course.length;

       for(let i=0; i <course.length; i ++) {
           total += course[i].progress;
       }
     } else {
       for (let subCourse of Object.values(course)) {

             students += subCourse.length;
     
             for(let i=0; i <subCourse.length; i ++) {
                 total += subCourse[i].progress;
               }
           }
       }
   }
return total / students ;
};

console.log(getTotalProgressByItteration(students));

// --------------------------------------------------------------------------------
function getTotalOrigressByReccursion(data) {
   if( Array.isArray(course)) {
   total = 0;

      for(let i=0; i <data.length; i ++) {
          total += data[i].progress;
     } 
     
     return[total, data.length];
   } else {
     let total = [0,0] 
     for(let SubData of Object.values(data)) {
      const subDataArr = getTotalOrigressByReccursion(subDataArr);
      total[0] += subDataArr[0];
      total[1] += subDataArr[1];
     }
     return total;
   }   

};
console.log(getTotalOrigressByReccursion(students))